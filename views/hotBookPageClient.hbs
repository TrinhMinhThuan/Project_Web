<div class="container">
  <div class="container mt-5">
    <div class="row">
      <div class="col-md-6">
        <div class="form-group">
          <label for="monthInput">Chọn tháng:</label>
          <select id="monthInput" name="month" class="form-control">
            <!-- Tạo các option cho tháng từ 1 đến 12 -->
            <script>
              for (let i = 1; i <= 12; i++) {
                document.write(`<option value="${i}">${i}</option>`);
              }
            </script>
          </select>
        </div>
      </div>
      <div class="col-md-6">
        <div class="form-group">
          <label for="yearInput">Nhập năm:</label>
          <input type="number" id="yearInput" class="form-control" name="year" min="1900" max="2100" placeholder=""
            required>
        </div>
      </div>
    </div>
    <div class ="d-flex justify-content-around">
        <button id="getDataBtn" class="btn btn-success mt-3">Thống kê theo tháng</button>
        <button id="getDataBtnYear" class="btn btn-success mt-3">Thống kê theo năm</button>
    </div>
    
    
    
    {{!-- Cột --}}
    <div  class="d-none d-flex justify-content-center chart-header">
      <h2 id = "chartHeader1" class = "d-none mt-3">Biểu đồ cột</h2>
    </div>
    <canvas id="myChart" width="400" height="200">

    </canvas>

    {{!-- Tròn --}}
    <div class="d-none d-flex justify-content-center chart-header mt-5">
      <h2 id = "chartHeader2" class = "d-none" >Biểu đồ tròn</h2>
    </div>
    <div class="mb-4 row justify-content-center">
 <canvas style="margin-top: 25px" class="col" id="myColorfulPieChart" width="1000" height="500">
    </canvas>
    </div>
   

  </div>
</div>
<!-- Bao gồm Bootstrap JS và Popper.js -->
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
<!-- Bao gồm Chart.js -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>


  let month_Input = document.getElementById('monthInput');
  let year_Input = document.getElementById('yearInput');
  
  function handleInvalidInput(input, errorMessage) { 
      input.setCustomValidity(errorMessage);
      input.reportValidity();
  }
  // Cấu hình biểu đồ
  var options = {
    scales: {
      yAxes: [{
        ticks: {
          beginAtZero:true,
          stepSize: 1,  // Chỉ hiển thị số nguyên
          precision: 0  // Không hiển thị số thập phân
        }
      }]
    }
  };

  // Tạo biểu đồ
  var ctx = document.getElementById('myChart').getContext('2d');
  var myChart;

  var ctx2 = document.getElementById('myColorfulPieChart').getContext('2d');
  var myColorfulPieChart;

  $('#getDataBtn').click(function () {
    // Lấy giá trị tháng và năm từ người dùng
    const selectedMonth = $('#monthInput').val();
    const selectedYear = $('#yearInput').val();

    // Kiểm tra xem tháng và năm có vượt quá thời điểm hiện tại hay không
    const currentYear = new Date().getFullYear();
    const currentMonth = new Date().getMonth() + 1;

    if (selectedYear == "") {
      handleInvalidInput(year_Input, 'Vui lòng nhập năm');
      return ;
    }
    if(selectedYear > currentYear){
      handleInvalidInput(year_Input, 'Vui lòng nhập năm không vượt quá thời điểm hiện tại');
      return ;
    }

    if (selectedYear == currentYear && selectedMonth > currentMonth) {
      handleInvalidInput(month_Input, 'Vui lòng chọn tháng không vượt quá thời điểm hiện tại');
      return ;
      
    }
    // Gửi yêu cầu AJAX để lấy dữ liệu từ máy chủ
    $.ajax({
      url: '/getStatisticalData',
      method: 'GET',
      data: { month: selectedMonth, year: selectedYear },
      success: function (dataFromServer) {
        // Cập nhật biểu đồ khi dữ liệu được nhận về từ máy chủ
        document.getElementById('chartHeader1').classList.remove('d-none');
        document.getElementById('chartHeader2').classList.remove('d-none');

        updateChart(dataFromServer);

      },
      error: function () {
        alert('Đã có lỗi xảy ra khi lấy dữ liệu từ máy chủ.');
      }
    });
  });

  // Theo năm
  $('#getDataBtnYear').click(function () {
    // Lấy giá trị tháng và năm từ người dùng
    const selectedYear = $('#yearInput').val();

    // Kiểm tra xem tháng và năm có vượt quá thời điểm hiện tại hay không
    const currentYear = new Date().getFullYear();

    if (selectedYear == "") {
      handleInvalidInput(year_Input, 'Vui lòng nhập năm');
      return ;
    }
    if(selectedYear > currentYear){
      handleInvalidInput(year_Input, 'Vui lòng nhập năm không vượt quá thời điểm hiện tại');
      return ;
    }

    // Gửi yêu cầu AJAX để lấy dữ liệu từ máy chủ
    $.ajax({
      url: '/getStatisticalData',
      method: 'GET',
      data: { year: selectedYear },
      success: function (dataFromServer) {
        // Cập nhật biểu đồ khi dữ liệu được nhận về từ máy chủ
        document.getElementById('chartHeader1').classList.remove('d-none');
        document.getElementById('chartHeader2').classList.remove('d-none');
        updateChart(dataFromServer);
      },
      error: function () {
        alert('Đã có lỗi xảy ra khi lấy dữ liệu từ máy chủ.');
      }
    });
  });

  // Hàm để cập nhật biểu đồ
  function updateChart(dataFromServer) {
    // Nếu biểu đồ đã tồn tại, hủy nó trước khi tạo mới
    if (myChart) {
      myChart.destroy();
    }
    if (myColorfulPieChart) {
      myColorfulPieChart.destroy();
    }
    // Tạo biểu đồ mới với dữ liệu từ máy chủ
    //Cột
    myChart = new Chart(ctx, {
      type: 'bar',
      data: {
        labels: dataFromServer.labels,
        datasets: [{
          label: 'Số lượng bán',
          backgroundColor: 'rgba(75, 192, 192, 0.2)',
          borderColor: 'rgba(75, 192, 192, 1)',
          borderWidth: 1,
          data: dataFromServer.data
        }]
      },
      options: options
    });

    // Tròn

    var data2 = {
      labels: dataFromServer.labels,
      datasets: [{
        data: dataFromServer.data,
        backgroundColor: [
          'rgb(255, 99, 132)',
          'rgb(54, 162, 235)',
          'rgb(255, 205, 86)',
          'rgb(75, 192, 192)',
          'rgb(153, 102, 255)',
          'rgb(255, 159, 64)',
          'rgb(255, 0, 0)',
          'rgb(0, 255, 0)',
          'rgb(0, 0, 255)',
          'rgb(128, 0, 128)',
        ],
        borderColor: 'rgba(255, 255, 255, 1)',
        borderWidth: 1
      }]
    };

    myColorfulPieChart = new Chart(ctx2, {
      type: 'pie',
      data: data2,
      options: {
        //maintainAspectRatio: false, 
        responsive: false,
        tooltips: {
          callbacks: {
            label: function (tooltipItem, data) {
              var label = data.labels[tooltipItem.index];
              var value = data.datasets[0].data[tooltipItem.index];
              var total = data.datasets[0].data.reduce((acc, val) => acc + val, 0);
              var percentage = ((value / total) * 100).toFixed(2) + '%';
              return label + ': ' + value + ' (' + percentage + ')';
            }
          }
        }
                
      
      }
    });
  }
</script>