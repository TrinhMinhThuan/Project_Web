<div class="container">
  <form class="d-flex flex-column" method="POST" action="/accounts/edit/{{user.UserID}}">
    <div class="mb-3 row align-items-center">
      <label class="form-label col-2 m-0">ID: </label>
      <input
        id="ID"
        type="number"
        class="form-control col-6"
        placeholder="Nhập ID"
        name = "userID"
        value= "{{user.UserID}}"
        required
      />
    </div>

    <div class="mb-3 row align-items-center">
      <label class="form-label col-2 m-0">Username: </label>
      <input
        id="username"
        type="text"
        class="form-control col-6"
        placeholder="Nhập username"
        name = "username"
        value = "{{user.Username}}"
        {{#unless user.GoogleID}}required{{/unless}}
      />
    </div>

    {{#unless user.GoogleID}}
    <div class="mb-3 row align-items-center">
      <label class="form-label col-2 m-0">Password: </label>
      <input
        id="password"
        type="password"
        class="form-control col-6"
        placeholder="Nhập password"
        name = "password"
      />
    </div>
    
     <div class="mb-3 row align-items-center">
      <label class="form-label col-2 m-0">Email: </label>
      <input
        id="email"
        type="text"
        class="form-control col-6"
        placeholder="Nhập email"
        name = "email"
        value= "{{user.Email}}"
        required
      />
    </div>
    {{/unless}}

     <div class="mb-3 row align-items-center">
      <label class="form-label col-2 m-0">Số dư: </label>
      <input
        id="balance"
        type="number"
        step="1000"
        class="form-control col-6"
        placeholder="Nhập số dư"
        name = "balance"
        value= "{{user.Balance}}"
        required
      />
    </div>

    <button type="submit" class="align-self-center d-block btn btn-success" onclick="validateForm('{{user.UserID}}', '{{user.GoogleID}}')">Lưu thay đổi</button>
  </form>
</div>

<script>
    function handleInvalidInput(input, errorMessage) { 
        input.setCustomValidity(errorMessage);
        input.reportValidity();
    }
   
    async function validateForm(oldID, GoogleID) { 
        let id = document.getElementById('ID');
        let username = document.getElementById('username');
        let password = document.getElementById('password');
        let balance = document.getElementById('balance');


        // ID
        if(id.value !== parseInt(oldID,10) )
        {
          const checkIDExsist = await fetch(`https://localhost:3000/checkIDExists?id=${id.value}`);
          const checkID = await checkIDExsist.json();
          const resID = checkID.result;

          if (resID == 1)
          {
              handleInvalidInput(id, 'ID đã tồn tại, vui lòng nhập ID khác.');
              return false;
          }
          else if (id.value === '') {
              handleInvalidInput(id, 'Vui lòng nhập ID.');
              return false;
          }
          else
          {
              handleInvalidInput(id, '');
          }
        }
        

        // Username
        var usernameRegex = /^\S+$/;
        const checkUNExsist = await fetch(`https://localhost:3000/checkUsernameExists?username=${username.value}`);
        const checkUN = await checkUNExsist.json();
        const resUN = checkUN.result;

        if (resUN == 1)
        {
            handleInvalidInput(username, 'Username đã tồn tại, vui lòng nhập username khác.');
            return false;
        }
        else if (username.value === '') {
            handleInvalidInput(username, 'Vui lòng nhập username.');
            return false;
        }
        else if (!usernameRegex.test(username.value)) {
            handleInvalidInput(username, 'Username không chứa dấu cách.');
            return false;
        }
        else
        {
            handleInvalidInput(username, '');
        }

        {{#unless GoogleID}}
          // Password
          if (!usernameRegex.test(password.value)) {
              handleInvalidInput(password, 'Password không chứa dấu cách.');
              return false;
          }
          else
          {
              handleInvalidInput(password, '');
          }


          // Email
          let email = document.getElementById('email');

          const emailRegex = /^[\w-]+(\.[\w-]+)*@([\w-]+\.)+[a-zA-Z]{2,10}$/;

          if (email.value === '')
          {
              handleInvalidInput(email, 'Vui lòng nhập email.');
              return false;
          }
          else if (emailRegex.test(email.value))
          {
              handleInvalidInput(email, 'Email không hợp lệ.');
              return false;
          }
          else
          {
              handleInvalidInput(email, '');
          }

        {{/unless}} 


        // Số dư
        if (balance.value === '')
        {
            handleInvalidInput(balance, 'Vui lòng nhập số dư.');
            return false;
        }
        else
        {
            handleInvalidInput(balance, '');
        }

        return true;
    }
  
</script>

