<div class="container d-flex flex-column">
  
    <h3 class="h5 col-4 w-100 fw-bold mb-0 text-gray-800 text-start mt-2 mb-4">Số dư của bạn: {{Balance}} đ
    </h3>
    <div class="row">
       <h3 class="h5 w-100 fw-bold mb-0 text-gray-800 text-center mt-3 mb-4">Tổng hóa đơn: 
        <span class="text-danger">{{TotalPriceAllItem}} đ</span>
      </h3>
    </div>
    
  

    {{#if cart.length}}
    <div>
        <table class="table">
            <thead>
                <tr class="text-center">
                    <th scope="col">#ID sách</th>
                    <th scope="col">Tên sách</th>
                    <th scope="col">Tác giả</th>
                    <th scope="col">Giá/ Sản phẩm</th>
                    <th scope="col">Số lượng</th>
                    <th scope="col">Đơn giá</th>
                    <th scope="col">Xóa</th>
                </tr>
            </thead>
            <tbody id="listBook">
                {{#each cart}}
                <tr class="text-center">
                    <th scope="row">{{this.ProductID}}</th>
                    <td>{{this.ProductName}}</td>
                    <td>{{this.Author}}</td>
                    <td>{{this.Price}} đ</td>
                    <td>{{this.Quantity}}</td>
                    <td>{{this.TotalPrice}} đ</td>
                    <td>
                        <button  class="btn btn-delete btn-danger"
                            data-cart-userId="{{this.UserID}}"
                            data-cart-delete-id="{{this.CartID}}">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                </tr>
                {{/each}}


            </tbody>
        </table>
    </div>
    <div class="d-flex justify-content-center mt-4 mb-4">
        {{#if pages}}
        <button class="btn-prevStart btn btn-light mr-2"><i class="fa fa-angle-double-left"></i></button>
        <button class="btn-prev btn btn-light mr-2"><i class="fas fa-chevron-left"></i></button>
        <select id="pageSelect" class="col-2 align-self-center text-center paging form-select ">
            {{#each pages}}
            <option value="{{this}}">Trang {{this}}</option>
            {{/each}}
        </select>
        <button class="btn-next btn btn-light ml-2"><i class="fas fa-chevron-right"></i></button>
        <button class="btn-nextEnd btn btn-light ml-2"><i class="fa fa-angle-double-right"></i></button>
        {{/if}}
    </div>

    
    <a href="/cartBook/pay" class="align-self-center d-block btn btn-success mb-4"> <i class="fa-solid fa-credit-card"></i> Xác nhận thanh toán
    </a>
    {{else}}
    <p class="text-center">Bạn chưa có sản phẩm nào trong giỏ hàng.</p>
    {{/if}}

    </h3>



</div>

<script>
    // Update Page
var currentPage;
// Hàm để cập nhật currentPage khi có sự kiện thay đổi
function updateCurrentPage() {
    currentPage = document.getElementById("pageSelect").value;
}

 document.querySelectorAll('.btn-delete').forEach(button => {
    button.addEventListener('click', function (e) {
      event.preventDefault();
      updateCurrentPage();
      const Id = this.getAttribute('data-cart-delete-id');
      const userId = this.getAttribute('data-cart-userId');
      
      const url =  `/cartBook/delete?ID=${Id}&page=${currentPage}&UserID=${userId}`;
      location.assign(url);
    })
  });


const selection = document.querySelector(".paging");
selection?.addEventListener("change", (e) => {
  const url = new URL(window.location.href);
  const query = new URLSearchParams(window.location.search);
  query.set("page", e.target.value);
  url.search = query;
  location.assign(url.href);
});
const query = new URLSearchParams(window.location.search);
if (selection) selection.value = query.get("page") || 1;
 

document.querySelectorAll('.btn-prevStart').forEach(button => {
  button.addEventListener('click', function(e) {
    event.preventDefault();
    updateCurrentPage();
    if(currentPage == 1){
      return;
    }
    const url = new URL(window.location.href);
    const query = new URLSearchParams(window.location.search);
    query.set("page", 1);
    url.search = query;
    location.assign(url.href);
  })
});

document.querySelectorAll('.btn-prev').forEach(button => {
  button.addEventListener('click', function(e) {
    event.preventDefault();
    updateCurrentPage();
    //const max = {{pages.length}};
    if(currentPage == 1){
      return;
    }
    const url = new URL(window.location.href);
    const query = new URLSearchParams(window.location.search);
    query.set("page", currentPage - 1);
    url.search = query;
    location.assign(url.href);
  })
});

document.querySelectorAll('.btn-nextEnd').forEach(button => {
  button.addEventListener('click', function(e) {
    event.preventDefault();
    updateCurrentPage();
    const max = {{pages.length}};
    if(currentPage == max){
      return;
    }
    const url = new URL(window.location.href);
    const query = new URLSearchParams(window.location.search);
    query.set("page", max);
    url.search = query;
    location.assign(url.href);
  })
});

document.querySelectorAll('.btn-next').forEach(button => {
  button.addEventListener('click', function(e) {
    event.preventDefault();
    updateCurrentPage();
    const max = {{pages.length}};
    if(currentPage == max){
      return;
    }
    const url = new URL(window.location.href);
    const query = new URLSearchParams(window.location.search);
    query.set("page", parseInt(currentPage,10) + 1);
    url.search = query;
    location.assign(url.href);
  })
});


</script>