<div class="container d-flex flex-column">
  <form id="searchForm"  action="/admin/searchCategories-Admin" method="GET">
    <div class="row gap-3">
      <input
        type="text"
        class="col-7 form-control"
        placeholder="Tìm kiếm bằng tên thể loại"
        name="keyCategoryName"
        value= "{{ValueName}}"
      />
      <button type="submit" class="col btn btn-success"><i class="fa-solid fa-magnifying-glass"></i>Tra cứu</button>
    </div>
  </form>

  <div class="query-result mt-5">
    <h5 class="text-center mb-3 fw-bold">KẾT QUẢ TRA CỨU</h5>
    <table class="table">
      <thead>
        <tr class="text-center">
          <th scope="col">#ID</th>
          <th scope="col">Tên thể loại</th>
          <th scope="col">Số sản phẩm</th>
          <th scope="col">Xóa</th>
          <th scope="col">Chỉnh sửa</th>
        </tr>
      </thead>
      <tbody>
         {{#each _Categories}}
          <tr class="text-center" id = {{this.CategoryID}}>
            <th scope="row" >{{this.CategoryID}}</th>
            <td>{{this.CategoryName}}</td>
            <td>{{this.CategoryQuantity}}</td>
            <td>
              <button class="btn btn-delete btn-danger" data-category-id="{{this.CategoryID}}">
                <i class="fas fa-trash"></i> 
              </button></td>
             <td class="text-center">
              <button class="btn btn-edit btn-primary" data-category-id="{{this.CategoryID}}">
                <i class="fas fa-edit"></i> 
              </button>
            </td>
          </tr>
        {{else}}
          <td colspan="6" class="text-center">Không Tìm Thấy Thể Loại Theo Yêu Cầu🥲</td>
        {{/each}}
      </tbody>
    </table>
  </div>
  <div class="d-flex justify-content-center">
    {{#if pages}}
    <button class="btn-prevStart btn btn-light mr-2"><i class="fa fa-angle-double-left"></i></button>
    <button class="btn-prev btn btn-light mr-2"><i class="fas fa-chevron-left"></i></button>
    <select id = "pageSelect" class="col-2 align-self-center text-center paging form-select ">
      {{#each pages}}
      <option value="{{this}}">Page {{this}}</option>
      {{/each}}
    </select>
    <button  class="btn-next btn btn-light ml-2"><i class="fas fa-chevron-right"></i></button>
    <button class="btn-nextEnd btn btn-light ml-2"><i class="fa fa-angle-double-right"></i></button>
    {{/if}}
  </div>
</div>
<script>
// Update Page
var currentPage;
// Hàm để cập nhật currentPage khi có sự kiện thay đổi
function updateCurrentPage() {
    currentPage = document.getElementById("pageSelect").value;
}

const selection = document.querySelector(".paging");
selection?.addEventListener("change", (e) => {
  const url = new URL(window.location.href);
  const query = new URLSearchParams(window.location.search);
  query.set("page", e.target.value);
  url.search = query;
  location.assign(url.href);
});
const query = new URLSearchParams(window.location.search);
if (selection) selection.value = query.get("page") || 1;


document.querySelectorAll('.btn-prevStart').forEach(button => {
  button.addEventListener('click', function(e) {
    event.preventDefault();
    updateCurrentPage();
    if(currentPage == 1){
      return;
    }
    const url = new URL(window.location.href);
    const query = new URLSearchParams(window.location.search);
    query.set("page", 1);
    url.search = query;
    location.assign(url.href);
  })
});

document.querySelectorAll('.btn-prev').forEach(button => {
  button.addEventListener('click', function(e) {
    event.preventDefault();
    updateCurrentPage();
    //const max = {{pages.length}};
    if(currentPage == 1){
      return;
    }
    const url = new URL(window.location.href);
    const query = new URLSearchParams(window.location.search);
    query.set("page", currentPage - 1);
    url.search = query;
    location.assign(url.href);
  })
});

document.querySelectorAll('.btn-nextEnd').forEach(button => {
  button.addEventListener('click', function(e) {
    event.preventDefault();
    updateCurrentPage();
    const max = {{pages.length}};
    if(currentPage == max){
      return;
    }
    const url = new URL(window.location.href);
    const query = new URLSearchParams(window.location.search);
    query.set("page", max);
    url.search = query;
    location.assign(url.href);
  })
});

document.querySelectorAll('.btn-next').forEach(button => {
  button.addEventListener('click', function(e) {
    event.preventDefault();
    updateCurrentPage();
    const max = {{pages.length}};
    if(currentPage == max){
      return;
    }
    const url = new URL(window.location.href);
    const query = new URLSearchParams(window.location.search);
    query.set("page", parseInt(currentPage,10) + 1);
    url.search = query;
    location.assign(url.href);
  })
});



// Delete vs ajax
document.querySelectorAll('.btn-delete').forEach(button => {
  button.addEventListener('click', function() {
    event.preventDefault();
    const categoryId = this.getAttribute('data-category-id');
    const deleteUrl = `/admin/categories/delete/${categoryId}`;
    // Sử dụng AJAX để gửi yêu cầu DELETE
    const xhr = new XMLHttpRequest();
    xhr.open('DELETE', deleteUrl, true);

    xhr.onreadystatechange = function() {
      if (xhr.readyState === 4) {
        console.log(xhr.status);
        if (xhr.status === 200) {
          // Xử lý thành công
          updateUI(categoryId);
          console.log('Dữ liệu đã được xóa thành công!');
        } else {
          // Xử lý lỗi
          console.error('Lỗi xóa dữ liệu:', xhr.statusText);
        }
      }
    };
    xhr.send();
  });
});
//Update giao diện
function updateUI(categoryId) {
    // Lấy tham chiếu đến phần tử trực tiếp bằng id
    const rowToRemove = document.getElementById(categoryId);
    // Kiểm tra xem có phần tử để loại bỏ không
    if (rowToRemove) {
      // Loại bỏ hàng từ DOM
      rowToRemove.remove();
    } else {
      console.error('Không tìm thấy hàng để loại bỏ.');
    }
}

// Edit
document.querySelectorAll('.btn-edit').forEach(button => {
  button.addEventListener('click', function() {
    event.preventDefault();
    const categoryId = this.getAttribute('data-category-id');
    window.location.href = `/admin/categories/edit/${categoryId}`;
  });
});
</script>
